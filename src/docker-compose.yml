version: '2.4'
services:
  haproxy_image_service:
    restart: always
    image: eeacms/haproxy:1.8-1.3
    depends_on:
    - image_service
    networks:
      - image-service-net
    ports:
    - "3000:5000"
    - "1936:1936"
    environment:
      BACKENDS: "image_service:3000"
      DNS_ENABLED: "true"
      LOG_LEVEL: "info"

  haproxy_cms:
    restart: always
    image: eeacms/haproxy:1.8-1.3
    depends_on:
    - cms_arragro_com
    ports:
    - "3001:5000"
    - "1937:1936"
    networks:
      - cms-net
    environment:
      BACKENDS: "cms_arragro_com:5000"
      DNS_ENABLED: "true"
      LOG_LEVEL: "info"
      HTTPCHK: GET /web-info/799c809f-9ca4-47ca-a9b1-3bce5c5215cf
      INTER: 30s
      DOWN_INTER: 2s
    healthcheck:
      test: ["CMD", "curl", "-f", "https://cms_arragro_com:5000/web-info/799c809f-9ca4-47ca-a9b1-3bce5c5215cf"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 20s

  haproxy_www:
    restart: always
    image: eeacms/haproxy:1.8-1.3
    depends_on:
    - www_arragro_com
    networks:
      - cms-net
    ports:
    - "3002:5000"
    - "1938:1936"
    environment:
      BACKENDS: "www_arragro_com:5001"
      DNS_ENABLED: "true"
      LOG_LEVEL: "info"
      HTTPCHK: GET /web-info/60aa42a9-6a6d-49ef-92c3-6c35ec124f0c
      INTER: 30s
      DOWN_INTER: 2s
    healthcheck:
      test: ["CMD", "curl", "-f", "https://www_arragro_com:5000/web-info/60aa42a9-6a6d-49ef-92c3-6c35ec124f0c"]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 20s

  cms_arragro_com:
    image: docker.arragro.com/cms.arragro.com:v3.1.0-alpha-001
    # logging:
    #   driver: none
    # ports:
    # - 3001:5000
    depends_on:
      - image_service
      - postgres
      - redis
      - azurite
    stdin_open: true
    tty: true
    restart: always
    networks:
      - redis-net
      - image-service-net
      - azurite-net
      - cms-net
    volumes:
      - cms-logs:/app/App_Data/Logs
    environment:
      - ConnectionStrings:CmsDatabaseConnection=host=postgres;port=5432;database=arragro-cms;user id=postgres;password=password1;
      - ConnectionStrings:StorageConnection=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;
      - ConnectionStrings:RedisConnection=redis:6379
      - ApplicationSettings:OverrideAssetUrl=http://192.168.69.89:10000/devstoreaccount1
      - ApplicationSettings:DatabaseType=Postgres
      - ApplicationSettings:DapperSchema=public
      - DataProtectionSettings:UseDataProtection=true
      - DataProtectionSettings:ApplicationName=cms.arragro.com
      - DataProtectionSettings:UseX509=true
      - DataProtectionSettings:CertPath=./Resources/test-cert.pfx
      - DataProtectionSettings:Password=password
      - DataProtectionSettings:DataProtectionStorage=Redis
      - DataProtectionSettings:RedisConnection=redis
      - DistributedCacheSettings:DistributedCacheType=redis
      - DistributedCacheSettings:ConfigurationNameOrConnectionString=redis
      - JwtSettings:CertPath=./Resources/test-cert.pfx
      - JwtSettings:Password=password
      - JwtSettings:Issuer=ArragroCMSServer
      - JwtSettings:Audience=ArragroCMSClient
      - DemoSettings:IsDemo=true
      - DemoSettings:ReadOnlyAccessToken:AccessToken=test
      - DemoSettings:ReadOnlyAccessToken:AccessSecret=test
      - WebInfoSettings:IsWebInfoEnabled=true
      - WebInfoSettings:Secret=799c809f-9ca4-47ca-a9b1-3bce5c5215cf
    scale: 2

  www_arragro_com:
    image: docker.arragro.com/www.arragro.com:v3.1.0-alpha-001
    depends_on:
      - cms_arragro_com
    # logging:
    #   driver: none
    # ports:
    # - 3002:5001
    restart: always
    networks:
      - cms-net
      - redis-net
    environment:
      - ConnectionStrings:RedisConnection=redis:6379
      - ArragroCmsOptions:ApiUrl=http://cms_arragro_com:5000
      - ArragroCmsOptions:AccessToken=test
      - ArragroCmsOptions:AccessSecret=test
      - WebInfoSettings:IsWebInfoEnabled=true
      - WebInfoSettings:Secret=60aa42a9-6a6d-49ef-92c3-6c35ec124f0c
    scale: 2
    healthcheck:
      test: ["CMD", "curl", "-f", "https://cms_arragro_com:5000/web-info/799c809f-9ca4-47ca-a9b1-3bce5c5215cf"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  image_service:
    restart: always
    image: docker.arragro.com/imageservice:v0.0.6-alpha
    networks:
      - image-service-net
    scale: 3

  redis:
    restart: always
    image: redis:5.0.3-alpine3.9
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"]
    mem_limit: 128m
    networks:
      - redis-net
    volumes:
      - redis-data:/data

  azurite:
    restart: always
    image: touchify/azurite:2.7.1
    ports:
      - 10000:10000
      - 10001:10001
      - 10002:10002
    networks:
      - azurite-net
    volumes:
      - azurite-data:/opt/azurite/folder

  postgres:
    restart: always
    image: postgres:10.7-alpine
    environment:
      - POSTGRES_PASSWORD=password1
    ports:
      - 5432:5432
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      - cms-net

  pgadmin:
    restart: unless-stopped
    image: dpage/pgadmin4:4.6
    ports:
      - 8081:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=support@arragro.com
      - PGADMIN_DEFAULT_PASSWORD=@rr@gr0
    networks:
      - cms-net
    volumes:
      - pgadmin:/var/lib/pgadmin
      - pgadmin:/pgadmin4/servers.json

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: unless-stopped
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "8082:8081"
    networks:
    - redis-net

#  sql:
#    restart: unless-stopped
#    image: microsoft/mssql-server-linux:2017-latest
#    ports:
#      - 1433:1433
#    environment:
#      - "ACCEPT_EULA=Y"
#      - "SA_PASSWORD=@rr@gr0SuperPassword1"
#    volumes:
#      - sql-data:/var/opt/mssql
#    mem_limit: "2048m"
#    networks:
#      - cms-net

networks:
  redis-net:
  image-service-net:
  azurite-net:
  cms-net:

volumes:
  redis-data:
  azurite-data:
  database:
  sql-data:
  pgadmin:
  cms-logs: